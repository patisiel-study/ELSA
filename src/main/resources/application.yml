spring:
  datasource:
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        generate-ddl: true
        open-in-view: true
        show-sql: true
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  data:
    redis:
      host: ${SPRING_REDIS_HOST}
      port: ${SPRING_REDIS_PORT}

  jwt:
    secret: ${JWT_SECRET}
    access-token-validity: ${JWT_AT}
    refresh-token-validity: ${JWT_RT}

openai:
  api:
    url: ${OPENAI_API_URL}
    key: ${OPENAI_API_KEY}

gemini:
  api:
    url: ${GEMINI_API_URL}
    key: ${GEMINI_API_KEY}

logging:
  level:
    root: INFO
    com.example.elsa: DEBUG
    org.springframework.web: INFO
    org.springframework.security: INFO

management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
    display-request-duration: true
    defaultModelsExpandDepth: -1
  api-docs:
    path: /api
    show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  paths-to-match:
    - /**

---
spring:
  config:
    activate:
      on-profile: local

server:
  port: 8080
  forward-headers-strategy: NATIVE

logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG

---
spring:
  config:
    activate:
      on-profile: prod

server:
  port: 443
  ssl:
    key-store: classpath:ssl/keystore.p12
    key-store-type: PKCS12
    key-store-password: ${SSL_KEY_STORE_PASSWORD}
  forward-headers-strategy: NATIVE
  tomcat:
    remoteip:
      remote-ip-header: X-Forwarded-For
      protocol-header: X-Forwarded-Proto

springdoc:
  swagger-ui:
    url-protocol: https